name: Run Tests

on:
  push:
    branches:
      - 'main'
  pull_request:

jobs:
  call-build-wheel:
    uses: ./.github/workflows/build_wheel.yml

  run-tests:
    name: "Test (${{matrix.os}}, Python ${{ matrix.python-version }})"
    runs-on: ${{ matrix.os }}
    needs: call-build-wheel

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-13, windows-latest, windows-11-arm]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        include:
          - python-version: "3.9"
            py_build: "cp39"
          - python-version: "3.10"
            py_build: "cp310"
          - python-version: "3.11"
            py_build: "cp311"
          - python-version: "3.12"
            py_build: "cp312"
          - python-version: "3.13"
            py_build: "cp313"
        exclude:
          - os: windows-11-arm
            python-version: "3.9"
          - os: windows-11-arm
            python-version: "3.10"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download wheel artifact
      uses: actions/download-artifact@v4
      with:
        name: wheel-${{ matrix.os }}-auto64-${{ matrix.py_build }}

    - name: Download wheels
      run: |
        pip download videotimestamps[dev] -d wheelhouse

    - name: Delete videotimestamps wheel from PyPI
      shell: bash
      run: |
        find wheelhouse -name 'videotimestamps-*.whl' -delete

    - name: Install wheel
      run: |
        pip install videotimestamps[dev] --no-index --find-links . --find-links wheelhouse

    - name: Run tests
      run: |
        pytest

    - name: Typecheck with mypy
      run: |
        mypy

    - name: Check code with ruff
      run: |
        ruff check

    - name: Delete
      shell: bash
      run: |
        rm -rf video_timestamps

    - name: Run coverage
      run: |
        coverage run --source=video_timestamps,tests -m pytest

    - name: Generate coverage report
      run: |
        coverage xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
